language: rust
cache: cargo
rust:
  - stable
  - nightly
env:
  - TARGET=x86_64-unknown-linux-gnu TEST=1
  - TARGET=x86_64-unknown-linux-musl
  - TARGET=aarch64-unknown-linux-gnu RUSTFLAGS="-C linker=aarch64-linux-gnu-gcc"
  - TARGET=arm-unknown-linux-gnueabi RUSTFLAGS="-C linker=arm-linux-gnueabi-gcc"
matrix:
  include:
    - rust: 1.27.2
      env: TARGET=x86_64-unknown-linux-gnu TEST=1
    - os: osx
      rust: stable
      env: TARGET=x86_64-apple-darwin
    - os: osx
      rust: nightly
      env: TARGET=x86_64-apple-darwin
    - rust: nightly
      env: DOC=1
      install:
        - cargo --list | egrep "^\s*deadlinks$" -q || cargo install cargo-deadlinks
        - cargo deadlinks -V
      before_script:
        - pip install 'travis-cargo<0.2' --user && export PATH=$HOME/.local/bin:$PATH
      script:
        # remove cached documentation, otherwise files from previous PRs can get included
        - rm -rf target/doc
        - cargo doc --no-deps --all --all-features
        - cargo deadlinks --dir target/doc
      after_success:
        - travis-cargo --only nightly doc-upload
    - rust: nightly
      env: TARGET=x86_64-unknown-linux-gnu FMT=1 CLIPPY=1
      before_install:
      install:
      before_script:
        - rustup component add rustfmt-preview
        - rustup component add clippy-preview
      script:
        - cargo fmt --all -- --check `find src -iname "*.rs"`
        - cargo clippy
  allow_failures:
    - rust: nightly
  fast_finish: true
before_install:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt-get update -qq; fi
install:
  - if [[ "$TARGET" == "x86_64-unknown-linux-musl" ]]; then sudo apt-get install -qq musl-tools; fi
  - if [[ "$TARGET" == "aarch64-unknown-linux-gnu" ]]; then sudo apt-get install -qq gcc-aarch64-linux-gnu libc6-arm64-cross libc6-dev-arm64-cross; fi
  - if [[ "$TARGET" == "arm-unknown-linux-gnueabi" ]]; then sudo apt-get install -qq gcc-arm-linux-gnueabi libc6-armel-cross libc6-dev-armel-cross; fi
before_script:
  - rustup target add $TARGET || true
script:
  - cargo build --verbose --all --target $TARGET
  - if [[ "$TEST" == "1" ]]; then cargo test --release --verbose --all; fi
notifications:
  email:
    on_success: never
env:
  global:
    secure: "pg/Mf3UyXI8+jvfKgUC/xI7Cdub2kPf3mE8BC8nE+ov9iGDGCFnmqLhS0SqyGNf5vxYO9DPL9S36ZT2Hs9OOVt522IN+uvd1s/wwnHswZxOf/9yHkUxA/j8h8vJ3VJyC9IAf8xzfZlfE8hkABzmvcatcyWqbebxv3cE92BCV5AG5WnPxlPTNx7fW11m7gQjlZvdL8zq+Re9Ei2T+n5LhGx4Ur2MYTD/tAlw9J7zQJTXGbFmkS8Qy756KGx0QhEM907/d9nbEwFfxxTSpDA+L2dxOrxH1oaQPG6x1OPK4WQXYb2aJXjAI9Vk1IUyBcnRyIdfyF+t9aJRcsI04/I5cQjjry3cORDM3xWh6yDWLJd1/WBgq9eLPbE6ZaSQYyLabKnKW58vgXRW8sp+HY/oAbAU5QFaulW/XmVA3JQvkp6TienvzeLaBJEqeP4pVNder7dukthcOyC2TzyScR+sP2DHHeDFae9qESU4sBUCiRvjwtvkWCrwTlTbHJLuU9dQzHVVDED9g3g0RjLq/oDYXBrzh1gGznyK1BKaDCLEal4SKhYGtBthfWH9KR5YGQjhQ6/Tpg3hzAeb+2uEO7Fdkoh4s70xX7LQaFpXvgbZxkDgk2N8JN/PCTnSasS7x5uSA4mUgEQ6L23WUrR8phDyDjUGTP2fpB+e6ho1YmkvIGCU="
